<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bean.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.bean.model.Comment" >
    <id column="commentsID" property="commentsid" jdbcType="VARCHAR" />
    <result column="movieID" property="movieid" jdbcType="VARCHAR" />
    <result column="userID" property="userid" jdbcType="VARCHAR" />
    <result column="commentsDetails" property="commentsdetails" jdbcType="VARCHAR" />
    <result column="commentsTime" property="commentstime" jdbcType="TIMESTAMP" />
    <result column="commentsLike" property="commentslike" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    commentsID, movieID, userID, commentsDetails, commentsTime, commentsLike
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from comments
    where commentsID = #{commentsid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from comments
    where commentsID = #{commentsid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bean.model.Comment" >
    insert into comments (commentsID, movieID, userID, 
      commentsDetails, commentsTime, commentsLike
      )
    values (#{commentsid,jdbcType=VARCHAR}, #{movieid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{commentsdetails,jdbcType=VARCHAR}, #{commentstime,jdbcType=TIMESTAMP}, #{commentslike,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bean.model.Comment" >
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentsid != null" >
        commentsID,
      </if>
      <if test="movieid != null" >
        movieID,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="commentsdetails != null" >
        commentsDetails,
      </if>
      <if test="commentstime != null" >
        commentsTime,
      </if>
      <if test="commentslike != null" >
        commentsLike,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentsid != null" >
        #{commentsid,jdbcType=VARCHAR},
      </if>
      <if test="movieid != null" >
        #{movieid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commentsdetails != null" >
        #{commentsdetails,jdbcType=VARCHAR},
      </if>
      <if test="commentstime != null" >
        #{commentstime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentslike != null" >
        #{commentslike,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.model.Comment" >
    update comments
    <set >
      <if test="movieid != null" >
        movieID = #{movieid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="commentsdetails != null" >
        commentsDetails = #{commentsdetails,jdbcType=VARCHAR},
      </if>
      <if test="commentstime != null" >
        commentsTime = #{commentstime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentslike != null" >
        commentsLike = #{commentslike,jdbcType=INTEGER},
      </if>
    </set>
    where commentsID = #{commentsid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.model.Comment" >
    update comments
    set movieID = #{movieid,jdbcType=VARCHAR},
      userID = #{userid,jdbcType=VARCHAR},
      commentsDetails = #{commentsdetails,jdbcType=VARCHAR},
      commentsTime = #{commentstime,jdbcType=TIMESTAMP},
      commentsLike = #{commentslike,jdbcType=INTEGER}
    where commentsID = #{commentsid,jdbcType=VARCHAR}
  </update>
</mapper>